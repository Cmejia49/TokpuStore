// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetailPosApi.DataAccess;

namespace RetailPosApi.Migrations
{
    [DbContext(typeof(ItemContext))]
    [Migration("20220716040510_intialMigration")]
    partial class intialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RetailPosApi.Model.Category", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CatId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("RetailPosApi.Model.Damage", b =>
                {
                    b.Property<int>("DamageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemPrice")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StockFid")
                        .HasColumnType("int");

                    b.Property<int>("StoreFid")
                        .HasColumnType("int");

                    b.HasKey("DamageId");

                    b.HasIndex("StoreFid");

                    b.ToTable("Damages");
                });

            modelBuilder.Entity("RetailPosApi.Model.Expenses", b =>
                {
                    b.Property<int>("ExpensesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreFid")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("ExpensesId");

                    b.HasIndex("StoreFid");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("RetailPosApi.Model.Items", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CatFId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceRange")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.HasIndex("CatFId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("RetailPosApi.Model.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("RetailPosApi.Model.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StockFid")
                        .HasColumnType("int");

                    b.Property<int>("StoreFid")
                        .HasColumnType("int");

                    b.HasKey("SaleId");

                    b.HasIndex("StoreFid");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("RetailPosApi.Model.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemFid")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("StockIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreFid")
                        .HasColumnType("int");

                    b.HasKey("StockId");

                    b.HasIndex("ItemFid");

                    b.HasIndex("StoreFid");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("RetailPosApi.Model.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StoreName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserFid")
                        .HasColumnType("int");

                    b.HasKey("StoreId");

                    b.HasIndex("UserFid")
                        .IsUnique()
                        .HasFilter("[UserFid] IS NOT NULL");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("RetailPosApi.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RetailPosApi.Model.V1.Images", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageDevicePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageDirectoryPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemFid")
                        .HasColumnType("int");

                    b.HasKey("ImageId");

                    b.HasIndex("ItemFid");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("RetailPosApi.Model.V1.Options", b =>
                {
                    b.Property<int>("OptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OptionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VariantFid")
                        .HasColumnType("int");

                    b.Property<int?>("VariantVarietyId")
                        .HasColumnType("int");

                    b.HasKey("OptionID");

                    b.HasIndex("VariantVarietyId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("RetailPosApi.Model.V1.Variants", b =>
                {
                    b.Property<int>("VarietyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemFid")
                        .HasColumnType("int");

                    b.Property<string>("VarietyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VarietyId");

                    b.HasIndex("ItemFid");

                    b.ToTable("Variants");
                });

            modelBuilder.Entity("RetailPosApi.Model.Damage", b =>
                {
                    b.HasOne("RetailPosApi.Model.Store", "Store")
                        .WithMany("DamageList")
                        .HasForeignKey("StoreFid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("RetailPosApi.Model.Expenses", b =>
                {
                    b.HasOne("RetailPosApi.Model.Store", "store")
                        .WithMany("ExpensesList")
                        .HasForeignKey("StoreFid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("store");
                });

            modelBuilder.Entity("RetailPosApi.Model.Items", b =>
                {
                    b.HasOne("RetailPosApi.Model.Category", "Category")
                        .WithMany("ItemList")
                        .HasForeignKey("CatFId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RetailPosApi.Model.RefreshToken", b =>
                {
                    b.HasOne("RetailPosApi.Model.User", null)
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("RetailPosApi.Model.Sale", b =>
                {
                    b.HasOne("RetailPosApi.Model.Store", "Store")
                        .WithMany("SaleList")
                        .HasForeignKey("StoreFid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("RetailPosApi.Model.Stock", b =>
                {
                    b.HasOne("RetailPosApi.Model.Items", "Item")
                        .WithMany("StockList")
                        .HasForeignKey("ItemFid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetailPosApi.Model.Store", "Store")
                        .WithMany("StockList")
                        .HasForeignKey("StoreFid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("RetailPosApi.Model.Store", b =>
                {
                    b.HasOne("RetailPosApi.Model.User", "User")
                        .WithOne("Store")
                        .HasForeignKey("RetailPosApi.Model.Store", "UserFid");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RetailPosApi.Model.V1.Images", b =>
                {
                    b.HasOne("RetailPosApi.Model.Items", "Item")
                        .WithMany("ImageList")
                        .HasForeignKey("ItemFid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("RetailPosApi.Model.V1.Options", b =>
                {
                    b.HasOne("RetailPosApi.Model.V1.Variants", "Variant")
                        .WithMany("Options")
                        .HasForeignKey("VariantVarietyId");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("RetailPosApi.Model.V1.Variants", b =>
                {
                    b.HasOne("RetailPosApi.Model.Items", "Item")
                        .WithMany("VariantList")
                        .HasForeignKey("ItemFid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("RetailPosApi.Model.Category", b =>
                {
                    b.Navigation("ItemList");
                });

            modelBuilder.Entity("RetailPosApi.Model.Items", b =>
                {
                    b.Navigation("ImageList");

                    b.Navigation("StockList");

                    b.Navigation("VariantList");
                });

            modelBuilder.Entity("RetailPosApi.Model.Store", b =>
                {
                    b.Navigation("DamageList");

                    b.Navigation("ExpensesList");

                    b.Navigation("SaleList");

                    b.Navigation("StockList");
                });

            modelBuilder.Entity("RetailPosApi.Model.User", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("RetailPosApi.Model.V1.Variants", b =>
                {
                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
